name: Approve Ops
on:
  issue_comment:
    types: [created, deleted, edited]
  issues:
    types: [opened, edited, milestoned]

jobs:
  approveops:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '/run-dry-run-migration')
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
        
      - name: echo issue comment body
        run: echo "$comment_body"
        env:
          comment_body: ${{ github.event.comment.body }}

      - name: echo issue comment body again
        run: echo "${{ github.event.comment.body }}"
        
      - name: echo user
        run: echo "${{ github.event.comment.user.login }}"
        
      - id: check-approval
        name: check if there is an approve command from authorized party
        run: | 
          set -euxo pipefail
          users=$(curl -sLX GET 'https://api.github.com/orgs/joshjohanning-org/teams/approver-team/members' \
            --header "Accept: application/vnd.github.v3+json" \
            --header "Authorization: Bearer ${{ secrets.GHEC_ADMIN_TOKEN }}" | jq -c '.[].login')

          approveCommand="/approve"
          comments=$(curl -sLX GET '${{ github.event.comment.issue_url }}/comments' \
            --header "Accept: application/vnd.github.v3+json" \
            --header "Authorization: Bearer ${{ secrets.GHEC_ADMIN_TOKEN }}")

          authorized=false

          for comment in $(echo $comments | jq -r '.[] | @base64'); do
              body=$(echo $comment | base64 --decode | jq -r '.body')
              actor=$(echo $comment | base64 --decode | jq -r '.user.login')
              if [[ $body == *"$approveCommand"* ]]; then
                  echo "Approve command found..."
                  echo $users | grep -q $actor && echo "Found $actor in users" && authorized=true || echo "Not found $actor in users"
              else
                  echo "Approve command not found..."
              fi
          done

          if $authorized; then
              echo "Authorized"
          else
              echo "Not authorized"
              echo "::set-output name=approved::false"
              echo "::error title=Not Approved::There is no /approve command in the comments from an authorized party"
          fi


      - if: ${{ steps.check-approval.outputs.approved == 'false' }}
        name: Create completed comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Hey, @${{ github.event.comment.user.login }}!
            :cry:  No one approved your run yet! Have someone from the approver team run `/approve` and then try your command again
