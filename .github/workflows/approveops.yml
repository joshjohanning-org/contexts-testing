name: Approve Ops
on:
  issue_comment:
    types: [created, deleted, edited]

jobs:
  approveops:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '/run-dry-run-migration')
    steps:
      - uses: tibdex/github-app-token@v1
        id: get_installation_token
        with:
          app_id: 170284
          private_key: ${{ secrets.PRIVATE_KEY }}
          
      - id: check-approval
        name: check if there is an approve command from authorized party
        run: | 
          users=$(curl -sLX GET 'https://api.github.com/orgs/${{ github.repository_owner }}/teams/approver-team/members' \
            --header "Accept: application/vnd.github.v3+json" \
            --header "Authorization: Bearer ${{ steps.get_installation_token.outputs.token }}" | jq -c '.[].login')

          approveCommand="/approve"
          comments=$(curl -sLX GET '${{ github.event.comment.issue_url }}/comments' \
            --header "Accept: application/vnd.github.v3+json" \
            --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}")

          authorized=false

          for comment in $(echo $comments | jq -r '.[] | @base64'); do
              body=$(echo $comment | base64 --decode | jq -r '.body')
              actor=$(echo $comment | base64 --decode | jq -r '.user.login')
              if [[ $body == *"$approveCommand"* ]]; then
                  echo "Approve command found..."
                  echo $users | grep -q $actor && echo "Found $actor in users" && authorized=true || echo "Not found $actor in users"
              else
                  echo "Approve command not found..."
              fi
          done

          if $authorized; then
              echo "Authorized"
              echo "::set-output name=approved::true"
          else
              echo "Not authorized"
              echo "::set-output name=approved::false"
              echo "::error title=Not Approved::There is no /approve command in the comments from an authorized party"
          fi
          
      - if: ${{ steps.check-approval.outputs.approved == 'false' }}
        name: Create completed comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ steps.get_installation_token.outputs.token }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Hey, @${{ github.event.comment.user.login }}!
            :cry:  No one approved your run yet! Have someone from the @joshjohanning-org/approver-team run `/approve` and then try your command again
            :no_entry_sign: :no_entry: Marking the workflow run as failed

      - if: ${{ steps.check-approval.outputs.approved == 'true' }}
        name: Create completed comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ steps.get_installation_token.outputs.token }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            Hey, @${{ github.event.comment.user.login }}!
            :tada:  You were able to run the migration because someone approved!! :tada:
            
      - if: ${{ steps.check-approval.outputs.approved == 'false' }}
        name: exit if not approved
        run: exit 1
  
  migration:
    runs-on: ubuntu-latest
    needs: approveops
    steps:
      - run: echo "run migration!"
